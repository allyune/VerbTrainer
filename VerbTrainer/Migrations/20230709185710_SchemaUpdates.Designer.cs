// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VerbTrainer.Data;

#nullable disable

namespace VerbTrainer.Migrations
{
    [DbContext(typeof(VerbTrainerDbContext))]
    [Migration("20230709185710_SchemaUpdates")]
    partial class SchemaUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VerbTrainer.Models.Domain.Binyan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Binyanim");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Conjugation", b =>
                {
                    b.Property<int>("VerbId")
                        .HasColumnType("integer");

                    b.Property<int>("TenseId")
                        .HasColumnType("integer");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transcription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VerbId", "TenseId");

                    b.HasIndex("TenseId");

                    b.ToTable("Conjugations");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Tense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tenses");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Verb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BinyanId")
                        .HasColumnType("integer");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Root")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BinyanId");

                    b.ToTable("Verbs");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Conjugation", b =>
                {
                    b.HasOne("VerbTrainer.Models.Domain.Tense", "Tense")
                        .WithMany()
                        .HasForeignKey("TenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VerbTrainer.Models.Domain.Verb", "Verb")
                        .WithMany("Conjugations")
                        .HasForeignKey("VerbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tense");

                    b.Navigation("Verb");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Verb", b =>
                {
                    b.HasOne("VerbTrainer.Models.Domain.Binyan", "Binyan")
                        .WithMany("Verbs")
                        .HasForeignKey("BinyanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Binyan");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Binyan", b =>
                {
                    b.Navigation("Verbs");
                });

            modelBuilder.Entity("VerbTrainer.Models.Domain.Verb", b =>
                {
                    b.Navigation("Conjugations");
                });
#pragma warning restore 612, 618
        }
    }
}
